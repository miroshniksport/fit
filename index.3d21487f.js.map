{"mappings":"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","sources":["src/js/reviews.js"],"sourcesContent":["function Sim(sldrId) {\n  let id = document.getElementById(sldrId);\n  if (id) {\n    this.sldrRoot = id;\n  } else {\n    this.sldrRoot = document.querySelector('.sim-slider');\n  }\n\n  // Carousel objects\n  this.sldrList = this.sldrRoot.querySelector('.sim-slider-list');\n  this.sldrElements = this.sldrList.querySelectorAll('.sim-slider-element');\n  this.sldrElemFirst = this.sldrList.querySelector('.sim-slider-element');\n  this.leftArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-left');\n  this.rightArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-right');\n  this.indicatorDots = this.sldrRoot.querySelector('div.sim-slider-dots');\n\n  // Initialization\n  this.options = Sim.defaults;\n  Sim.initialize(this);\n}\n\nSim.defaults = {\n  // Default options for the carousel\n  loop: true, // Бесконечное зацикливание слайдера\n  auto: true, // Автоматическое пролистывание\n  interval: 5000, // Интервал между пролистыванием элементов (мс)\n  arrows: true, // Пролистывание стрелками\n  dots: true, // Индикаторные точки\n};\n\nSim.prototype.elemPrev = function (num) {\n  num = num || 1;\n\n  let prevElement = this.currentElement;\n  this.currentElement -= num;\n  if (this.currentElement < 0) this.currentElement = this.elemCount - 1;\n\n  if (!this.options.loop) {\n    if (this.currentElement == 0) {\n      this.leftArrow.style.display = 'none';\n    }\n    this.rightArrow.style.display = 'block';\n  }\n\n  this.sldrElements[this.currentElement].style.opacity = '1';\n  this.sldrElements[prevElement].style.opacity = '0';\n\n  if (this.options.dots) {\n    this.dotOn(prevElement);\n    this.dotOff(this.currentElement);\n  }\n};\n\nSim.prototype.elemNext = function (num) {\n  num = num || 1;\n\n  let prevElement = this.currentElement;\n  this.currentElement += num;\n  if (this.currentElement >= this.elemCount) this.currentElement = 0;\n\n  if (!this.options.loop) {\n    if (this.currentElement == this.elemCount - 1) {\n      this.rightArrow.style.display = 'none';\n    }\n    this.leftArrow.style.display = 'block';\n  }\n\n  this.sldrElements[this.currentElement].style.opacity = '1';\n  this.sldrElements[prevElement].style.opacity = '0';\n\n  if (this.options.dots) {\n    this.dotOn(prevElement);\n    this.dotOff(this.currentElement);\n  }\n};\n\nSim.prototype.dotOn = function (num) {\n  this.indicatorDotsAll[num].style.cssText =\n    'background-color:#00c0ca; cursor:pointer;';\n};\n\nSim.prototype.dotOff = function (num) {\n  this.indicatorDotsAll[num].style.cssText =\n    'background-color:#e8f001; cursor:default; transform: scale(1.5);';\n};\n\nSim.initialize = function (that) {\n  // Constants\n  that.elemCount = that.sldrElements.length; // Количество элементов\n\n  // Variables\n  that.currentElement = 0;\n  let bgTime = getTime();\n\n  // Functions\n  function getTime() {\n    return new Date().getTime();\n  }\n  function setAutoScroll() {\n    that.autoScroll = setInterval(function () {\n      let fnTime = getTime();\n      if (fnTime - bgTime + 10 > that.options.interval) {\n        bgTime = fnTime;\n        that.elemNext();\n      }\n    }, that.options.interval);\n  }\n\n  // Start initialization\n  if (that.elemCount <= 1) {\n    // Отключить навигацию\n    that.options.auto = false;\n    that.options.arrows = false;\n    that.options.dots = false;\n    that.leftArrow.style.display = 'none';\n    that.rightArrow.style.display = 'none';\n  }\n  if (that.elemCount >= 1) {\n    // показать первый элемент\n    that.sldrElemFirst.style.opacity = '1';\n  }\n\n  if (!that.options.loop) {\n    that.leftArrow.style.display = 'none'; // отключить левую стрелку\n    that.options.auto = false; // отключить автопркрутку\n  } else if (that.options.auto) {\n    // инициализация автопрокруки\n    setAutoScroll();\n    // Остановка прокрутки при наведении мыши на элемент\n    that.sldrList.addEventListener(\n      'mouseenter',\n      function () {\n        clearInterval(that.autoScroll);\n      },\n      false\n    );\n    that.sldrList.addEventListener('mouseleave', setAutoScroll, false);\n  }\n\n  if (that.options.arrows) {\n    // инициализация стрелок\n    that.leftArrow.addEventListener(\n      'click',\n      function () {\n        let fnTime = getTime();\n        if (fnTime - bgTime > 1000) {\n          bgTime = fnTime;\n          that.elemPrev();\n        }\n      },\n      false\n    );\n    that.rightArrow.addEventListener(\n      'click',\n      function () {\n        let fnTime = getTime();\n        if (fnTime - bgTime > 1000) {\n          bgTime = fnTime;\n          that.elemNext();\n        }\n      },\n      false\n    );\n  } else {\n    that.leftArrow.style.display = 'none';\n    that.rightArrow.style.display = 'none';\n  }\n\n  if (that.options.dots) {\n    // инициализация индикаторных точек\n    let sum = '',\n      diffNum;\n    for (let i = 0; i < that.elemCount; i++) {\n      sum += '<span class=\"sim-dot\"></span>';\n    }\n    that.indicatorDots.innerHTML = sum;\n    that.indicatorDotsAll = that.sldrRoot.querySelectorAll('span.sim-dot');\n    // Назначаем точкам обработчик события 'click'\n    for (let n = 0; n < that.elemCount; n++) {\n      that.indicatorDotsAll[n].addEventListener(\n        'click',\n        function () {\n          diffNum = Math.abs(n - that.currentElement);\n          if (n < that.currentElement) {\n            bgTime = getTime();\n            that.elemPrev(diffNum);\n          } else if (n > that.currentElement) {\n            bgTime = getTime();\n            that.elemNext(diffNum);\n          }\n          // Если n == that.currentElement ничего не делаем\n        },\n        false\n      );\n    }\n    that.dotOff(0); // точка[0] выключена, остальные включены\n    for (let i = 1; i < that.elemCount; i++) {\n      that.dotOn(i);\n    }\n  }\n};\n\nnew Sim();\n"],"names":["Sim","sldrId","id","document","getElementById","this","sldrRoot","querySelector","sldrList","sldrElements","querySelectorAll","sldrElemFirst","leftArrow","rightArrow","indicatorDots","options","defaults","initialize","loop","auto","interval","arrows","dots","prototype","elemPrev","num","prevElement","currentElement","elemCount","style","display","opacity","dotOn","dotOff","elemNext","indicatorDotsAll","cssText","that","length","bgTime","getTime","Date","setAutoScroll","autoScroll","setInterval","fnTime","addEventListener","clearInterval","diffNum","n","Math","abs","sum","i","innerHTML","_loop","i1"],"version":3,"file":"index.3d21487f.js.map"}